name: Deploy WordPress Theme test
on:
  # push:
  #   branches:
  #     - experimental/digimod-digital-government
  workflow_dispatch:
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with: 
        ref: experimental/digimod-digital-government
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
        extensions: mbstring, intl, pdo_mysql
        coverage: none

    - name: Install Composer
      run: |
        curl -sS https://getcomposer.org/installer | php
        sudo mv composer.phar /usr/local/bin/composer
        composer --version

    - name: Clone wordpress-deploy-digimod repository
      run: |
        git clone -b digimod-deploy https://github.com/bcgov/wordpress-deploy-digimod.git

    - name: Clone wordpress-digimod repository
      run: |
        git clone https://github.com/bcgov/wordpress-digimod.git
    
    - name: Log in to OpenShift
      run: |
        oc login ${{ secrets.OPENSHIFT_SERVER }} --token=${{ secrets.OPENSHIFT_TEST_API_TOKEN }} --insecure-skip-tls-verify=true
    - name: Delete existing deployment, if it exists
      run: |
        export NAMESPACE="c0cce6-test"
        export OC_ENV=test
        export OC_SITE_NAME=digital-test
        export WORDPRESS_POD_NAME=$(oc get pods -n $NAMESPACE -l app=wordpress,role=wordpress-core,site=${OC_SITE_NAME} -o jsonpath='{.items[0].metadata.name}')
        WORDPRESS_CONTAINER_NAME=$(oc get pods -n $NAMESPACE $WORDPRESS_POD_NAME -o jsonpath='{.spec.containers[0].name}')
        if [ -n "$WORDPRESS_CONTAINER_NAME" ]; then
          cd wordpress-deploy-digimod
          chmod +x site-delete-unix.sh
          ./site-delete-unix.sh
        fi      
    - name: Create new WordPress instance
      run: |
        export NAMESPACE="c0cce6-test"
        export OC_ENV=test
        export OC_SITE_NAME=digital-test
        cd wordpress-deploy-digimod
        chmod +x site-builder-unix.sh
        ./site-builder-unix.sh
    - name: Wait for WordPress pod to be running
      run: |
        export NAMESPACE="c0cce6-test"
        export OC_SITE_NAME=digital-test
        export WORDPRESS_POD_NAME=$(oc get pods -n $NAMESPACE -l app=wordpress,role=wordpress-core,site=${OC_SITE_NAME} -o jsonpath='{.items[0].metadata.name}')
        oc wait --for=condition=Ready pod/$WORDPRESS_POD_NAME -n $NAMESPACE --timeout=5m
        # Wait for the WordPress container to be created
        while true; do
          WORDPRESS_CONTAINER_NAME=$(oc get pods -n $NAMESPACE $WORDPRESS_POD_NAME -o jsonpath='{.spec.containers[0].name}')
          if [ -n "$WORDPRESS_CONTAINER_NAME" ]; then
            break
          fi
          echo "Waiting for WordPress container to be created..."
          sleep 5
        done
        # Add an additional sleep to ensure the container is fully initialized
        echo "Waiting for WordPress container to be fully initialized..."
        sleep 30
    - name: Deploy theme
      run: |
        export THEME_NAME="bcgov-wordpress-block-theme"
        export NAMESPACE="c0cce6-test"
        export OC_SITE_NAME=digital-test
        export WORDPRESS_POD_NAME=$(oc get pods -n $NAMESPACE -l  app=wordpress,role=wordpress-core,site=${OC_SITE_NAME} -o jsonpath='{.items[0].metadata.name}')
        export WORDPRESS_CONTAINER_NAME=$(oc get pods -n $NAMESPACE $WORDPRESS_POD_NAME -o jsonpath='{.spec.containers[0].name}')
        export DATE=$(date +%Y-%m-%d-%H-%M)
        composer install
        # Check if the theme folder exists and rename it to create a backup
        THEME_FOLDER_EXISTS=$(oc exec -n $NAMESPACE -c $WORDPRESS_CONTAINER_NAME $WORDPRESS_POD_NAME -- test -d /var/www/html/wp-content/themes/$THEME_NAME && echo "yes" || echo "no")
        if [ "$THEME_FOLDER_EXISTS" = "yes" ]; then
          oc exec -n $NAMESPACE -c $WORDPRESS_CONTAINER_NAME $WORDPRESS_POD_NAME -- mv /var/www/html/wp-content/themes/$THEME_NAME /var/www/html/wp-content/themes/${THEME_NAME}_backup_${DATE}
        fi
        oc cp --no-preserve . $NAMESPACE/$WORDPRESS_POD_NAME:/var/www/html/wp-content/themes/$THEME_NAME -c $WORDPRESS_CONTAINER_NAME
        
        if [ "$THEME_FOLDER_EXISTS" = "no" ]; then
          # Activate the theme
          # Download wp-cli in the GitHub Actions workspace
          curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
          # Copy wp-cli to the WordPress instance
          oc cp --no-preserve wp-cli.phar $NAMESPACE/$WORDPRESS_POD_NAME:/tmp/wp-cli.phar -c $WORDPRESS_CONTAINER_NAME
          oc exec -n $NAMESPACE -c $WORDPRESS_CONTAINER_NAME $WORDPRESS_POD_NAME -- chmod +x /tmp/wp-cli.phar 
          oc exec -n $NAMESPACE -c $WORDPRESS_CONTAINER_NAME $WORDPRESS_POD_NAME -- php /tmp/wp-cli.phar theme activate $THEME_NAME --allow-root
        fi
    - name: Deploy plugins
      run: |
        export NAMESPACE="c0cce6-test"
        export OC_SITE_NAME=digital-test
        export WORDPRESS_POD_NAME=$(oc get pods -n $NAMESPACE -l  app=wordpress,role=wordpress-core,site=${OC_SITE_NAME} -o jsonpath='{.items[0].metadata.name}')
        export WORDPRESS_CONTAINER_NAME=$(oc get pods -n $NAMESPACE $WORDPRESS_POD_NAME -o jsonpath='{.spec.containers[0].name}')
        for dir in `ls -d */`; do
          if [[ $dir != git* ]]; then
              oc cp --no-preserve . $NAMESPACE/$WORDPRESS_POD_NAME:/var/www/html/wp-content/plugins/$dir -c $WORDPRESS_CONTAINER_NAME
          fi
        done  
